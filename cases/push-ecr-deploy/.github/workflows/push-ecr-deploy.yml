# JavaScriptアプリケーションをビルドしてAmazon ECRにデプロイするワークフロー
name: Build and Deploy to ECR

# devブランチへのプッシュ時に実行
on:
  push:
    branches:
      - dev

# 環境変数の設定
env:
  AWS_REGION: ap-northeast-1  # AWSリージョン
  ECR_REPOSITORY: js-app-repo # ECRリポジトリ名

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # ソースコードのチェックアウト
      - name: Checkout code
        uses: actions/checkout@v3

      # Node.jsのセットアップ
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # 依存関係のインストール
      - name: Install dependencies
        run: npm ci

      # JavaScriptのビルド
      - name: Build JavaScript
        run: npm run build

      # AWS認証情報の設定
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Amazon ECRへのログイン
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # DockerイメージのビルドとECRへのプッシュ
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}  # コミットハッシュをタグとして使用
        run: |
          # イメージのビルドとタグ付け
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          # コミットハッシュタグでプッシュ
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          # latestタグの更新
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
